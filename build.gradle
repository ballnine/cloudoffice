buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'org.hidetake:gradle-ssh-plugin:2.3.0'
	}
}
apply plugin: 'org.hidetake.ssh'
ssh.settings {
	knownHosts = allowAnyHosts
}
def localMaven='http://134.64.116.90:8101/nexus/content/repositories/AhdxZZKF'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply from: localMaven + '/com/chinatelecom/udp/core/sharejars/1.0.0/sharejars-1.0.0-exclude.gradle'
apply from: localMaven + '/com/chinatelecom/udp/gradle/1.0/gradle-1.0-shareFunction.gradle'
version = '1.0.0'
group="com.chinatelecom.cloudoffice"
jar {
	manifest {
		attributes 'Implementation-Title': 'WebDeploy', 'Implementation-Version': version
	}
}
eclipse{
	eclipse.classpath {
		containers "org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v9.0"
	}
	wtp {

		facet{
			facet name: 'jst.web', version: '3.0'
			facet name: 'jst.java', version: '1.8'
			file {
				withXml {
					def node = it.asNode()
					node.appendNode('runtime',["name":"Apache Tomcat v9.0"])
				}
			}
		}
		component{
			contextPath = 'cloudoffice'
			resource sourcePath: "src/main/webapp", deployPath: "/"
		}
	}
}
configurations {
	compile.exclude group: 'javax.servlet',module:'servlet-api'
	compile.exclude group: 'javax.jms',module:'jms'
	compile.exclude group: 'org.hornetq',module:'hornetq-core'
 }
dependencies {
	providedCompile fileTree(include: ['*.jar'], dir: 'provideLibs')
	// https://mvnrepository.com/artifact/com.alibaba/fastjson
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'
	compile (
			'com.chinatelecom.udp.core:service-server:1.0.2',
			'com.chinatelecom.udp.core:websecurity:1.0.3',
			'com.chinatelecom.udp.core:share-adapter:1.0.1',
			'com.chinatelecom.udp.core:cmclient:1.0.2',
			'com.chinatelecom.udp.core:dataaccess:1.0.4',
			'com.chinatelecom.udp.component:ctdfslibrary:1.0.0',
			'commons-collections:commons-collections:3.2',
			"org.mybatis:mybatis-spring:1.2.3",
			"org.mybatis:mybatis:3.3.0",
			'org.springframework:spring-jdbc:4.1.6.RELEASE',
			"org.springframework:spring-webmvc:4.1.6.RELEASE",
			"com.github.abel533:entitymapper:1.0.0",
			"com.chinatelecom.udp.core:httplibrary:1.0.0",
			"org.apache.hadoop:hadoop-common:3.2.0",
			"org.apache.curator:curator-framework:2.8.0",
			"org.apache.curator:curator-recipes:2.8.0",
			"org.apache.curator:curator-client:2.8.0",
			"org.apache.hbase:hbase-client:1.1.7",
			"org.apache.hbase:hbase-it:1.1.3",
			"org.apache.hadoop:hadoop-hdfs:3.2.0",
			"org.apache.hadoop:hadoop-hdfs-client:3.2.0",
			"commons-fileupload:commons-fileupload:1.4",
			'com.chinatelecom.udp.component:script-library:1.0.1',
			"com.chinatelecom.worksmart:imlibrary:1.3.1",
			"org.clojars.cbilson:pinyin4j:2.5.0",
		 	"com.google.zxing:core:3.3.0",
		 	'com.fasterxml.jackson.core:jackson-annotations:2.8.1',
		 	'com.fasterxml.jackson.core:jackson-core:2.5.2'
			)
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile ("org.apache.httpcomponents:httpclient:4.5.9")
	compile fileTree(dir:'lib',include:['*.jar'])
	compile group: 'ch.ethz.ganymed', name: 'ganymed-ssh2', version: 'build210'
	
}
//生产包
task makeWarPro (dependsOn:[
	'replaceToProductFile',
	'copyXml',
	'war'
]){
	group="deploy"
	outputs.upToDateWhen { false }
	inputs.file file("build/libs/cloudoffice.war")
	outputs.file file("build/libs/cloudoffice.war")
	doLast{
		replaceToDebugFile()
	}
}
task replaceToProductFile(type: Copy){
	from('src/main/resources/config/oracle_product.properties'){
		rename 'oracle_product.properties','oracle.properties'
	}
	into 'src/main/resources/config/'
	println "database file restore to product"
}
def replaceToDebugFile(){

	copy{
		from('src/main/resources/config/oracle_debug.properties'){
			rename 'oracle_debug.properties','oracle.properties'
		}
		into 'src/main/resources/config/'
	}
	println "database file restore to debug"
}

task copyXml(type: Copy){
	from 'src/main/java/com/chinatelecom/cloudoffice'
	into 'build/classes/java/main/com/chinatelecom/cloudoffice'
	exclude '**/*.java'
	//include '**/*.xml'
}

war.archiveName "cloudoffice.war"

remotes {
	deployServer {
		host = '192.168.2.11'
		user = 'dfs'
		password = '123456'
	}
}
//
//task copyWarToRemote(dependsOn:makeWarPro) {
//	ssh.run {
//		session(remotes.deployServer) {
//			println 'start deleting cloudoffice dir'
//			execute 'rm -rf /home/dfs/apache-tomcat-9/webapps/cloudoffice'
//			println 'start deleting cloudoffice war'
//			execute 'rm -rf /home/dfs/apache-tomcat-9/webapps/cloudoffice.war'
//			println 'start copying war...'
//			put from: buildDir.toString() + '/libs/cloudoffice.war', into: '/home/dfs/apache-tomcat-9/webapps'
//		}
//	}
//}
